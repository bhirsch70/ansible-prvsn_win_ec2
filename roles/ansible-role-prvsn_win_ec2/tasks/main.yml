---
# tasks file for provision
- name: Ensure Windows security group is present
  ec2_group:
    name: WinRM RDP
    description: Inbound WinRM and RDP
    region: "{{ ec2_region }}"
    vpc_id: "{{ ec2_vpc_id }}"
    rules:
      - proto: tcp
        from_port: 80
        to_port: 80
        cidr_ip: 0.0.0.0/0
      - proto: tcp
        from_port: 5986
        to_port: 5986
        cidr_ip: 0.0.0.0/0
      - proto: tcp
        from_port: 3389
        to_port: 3389
        cidr_ip: 0.0.0.0/0
    rules_egress:
      - proto: -1
        cidr_ip: 0.0.0.0/0
  register: sg_out
  tags:
    - create
    - terminate

- name: Create or terminate a Windows instance
  ec2:
    region: "{{ ec2_region }}"
    image: "{{ ec2_image }}"
    instance_type: "{{ ec2_type }}"
    group_id: [ "{{ sg_out.group_id }}" ]
    vpc_subnet_id: "{{ ec2_vpc_subnet_id }}"
    assign_public_ip: yes
    wait: "{{ ec2_wait }}"
    wait_timeout: 500
    exact_count: "{{ ec2_exact_count }}"
    count_tag:
      Name: "{{ ec2_instance_prefix }}-{{ ec2_instance_name }}"
    instance_tags:
      Name: "{{ ec2_instance_prefix }}-{{ ec2_instance_name }}"
    user_data: "{{ lookup('template', 'userdata-txt.j2') }}"
  register: ec2_result
  tags:
    - create
    - terminate

- name: wait for WinRM to answer on all hosts
  wait_for:
    host: "{{ item.public_ip }}"
    port: 5986
    delay: 60
    timeout: 320
  with_items: "{{ ec2_result.tagged_instances }}"
  delegate_to: localhost
  tags:
    - create
